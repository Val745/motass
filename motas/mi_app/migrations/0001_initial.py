# Generated by Django 5.1.7 on 2025-04-08 00:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Mascota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('especie', models.CharField(choices=[('Perro', 'Perro'), ('Gato', 'Gato')], default='Perro', max_length=10)),
                ('raza', models.CharField(max_length=100)),
                ('edad', models.PositiveIntegerField()),
                ('sexo', models.CharField(choices=[('Macho', 'Macho'), ('Hembra', 'Hembra')], default='Macho', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistorialMedico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ultima_consulta', models.DateField()),
                ('peso', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, null=True)),
                ('alergias', models.TextField(blank=True, help_text='Escribe una alergia por línea')),
                ('cirugias_previas', models.TextField(blank=True, help_text='Escribe una cirugía por línea')),
                ('enfermedades_cronicas', models.TextField(blank=True, help_text='Escribe una enfermedad por línea')),
                ('alimentacion', models.CharField(blank=True, max_length=100)),
                ('hidratacion', models.CharField(blank=True, max_length=100)),
                ('vacuna_moquillo', models.BooleanField(default=False)),
                ('vacuna_parvovirus', models.BooleanField(default=False)),
                ('vacuna_rabia', models.BooleanField(default=False)),
                ('vacuna_leptospirosis', models.BooleanField(default=False)),
                ('vacuna_polivalente', models.BooleanField(default=False)),
                ('desparasitacion_interna', models.BooleanField(default=False)),
                ('desparasitacion_externa', models.BooleanField(default=False)),
                ('mascota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi_app.mascota')),
            ],
        ),
    ]
